////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : prime.vf
// /___/   /\     Timestamp : 11/12/2019 11:56:46
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family artix7 -verilog D:/KZ/addersub/prime.vf -w D:/KZ/addersub/prime.sch
//Design Name: prime
//Device: artix7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module adderSub_MUSER_prime(A, 
                            B, 
                            C, 
                            carry, 
                            sum);

    input A;
    input B;
    input C;
   output carry;
   output sum;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   
   AND2  XLXI_1 (.I0(B), 
                .I1(A), 
                .O(XLXN_1));
   AND2  XLXI_2 (.I0(C), 
                .I1(B), 
                .O(XLXN_2));
   AND2  XLXI_3 (.I0(C), 
                .I1(A), 
                .O(XLXN_3));
   XOR3  XLXI_4 (.I0(C), 
                .I1(B), 
                .I2(A), 
                .O(sum));
   OR3  XLXI_6 (.I0(XLXN_3), 
               .I1(XLXN_2), 
               .I2(XLXN_1), 
               .O(carry));
endmodule
`timescale 1ns / 1ps

module prime(a0, 
             a1, 
             b0, 
             b1, 
             Cin, 
             T);

    input a0;
    input a1;
    input b0;
    input b1;
    input Cin;
   output T;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_15;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_27;
   wire XLXN_28;
   
   adderSub_MUSER_prime  XLXI_1 (.A(a0), 
                                .B(XLXN_1), 
                                .C(Cin), 
                                .carry(XLXN_3), 
                                .sum(XLXN_22));
   adderSub_MUSER_prime  XLXI_2 (.A(a1), 
                                .B(XLXN_2), 
                                .C(XLXN_3), 
                                .carry(XLXN_27), 
                                .sum(XLXN_15));
   XOR2  XLXI_3 (.I0(Cin), 
                .I1(b0), 
                .O(XLXN_1));
   XOR2  XLXI_4 (.I0(Cin), 
                .I1(b1), 
                .O(XLXN_2));
   AND2  XLXI_5 (.I0(XLXN_27), 
                .I1(XLXN_22), 
                .O(XLXN_23));
   AND2  XLXI_6 (.I0(XLXN_28), 
                .I1(XLXN_15), 
                .O(XLXN_24));
   OR2  XLXI_7 (.I0(XLXN_24), 
               .I1(XLXN_23), 
               .O(T));
   INV  XLXI_8 (.I(XLXN_27), 
               .O(XLXN_28));
endmodule
